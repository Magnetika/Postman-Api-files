{
	"info": {
		"_postman_id": "7b887564-1422-446f-b0f0-2a487fe36637",
		"name": "List Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34960495"
	},
	"item": [
		{
			"name": "Lists IDs -200OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains lists\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"    pm.expect(jsonData.length).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Each list has an id\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function(list) {",
							"        pm.expect(list).to.have.property('id');",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/lists",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Lists IDs - 301 moved permanetly",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains lists\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"    pm.expect(jsonData.length).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Each list has an id\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function(list) {",
							"        pm.expect(list).to.have.property('id');",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/lists",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Lists IDs - 403- Forbidden",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains lists\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"    pm.expect(jsonData.length).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Each list has an id\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function(list) {",
							"        pm.expect(list).to.have.property('id');",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "hhhh",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/lists",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Lists IDs -400- bad request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains lists\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"    pm.expect(jsonData.length).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Each list has an id\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function(list) {",
							"        pm.expect(list).to.have.property('id');",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept-encoding": true,
					"connection": true,
					"accept": true,
					"user-agent": true,
					"host": true
				},
				"followRedirects": false,
				"disableUrlEncoding": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/lists",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Lists IDs - 404 Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains lists\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"    pm.expect(jsonData.length).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Each list has an id\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function(list) {",
							"        pm.expect(list).to.have.property('id');",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/list",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"list"
					]
				}
			},
			"response": []
		}
	]
}