{
	"info": {
		"_postman_id": "60619faa-2e72-441e-9a8e-39f2f49e9efe",
		"name": "Cards Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34960495"
	},
	"item": [
		{
			"name": "List cards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of card names\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var cardNames = jsonData.map(function(card) {\r",
							"        return card.name;\r",
							"    });\r",
							"    pm.expect(cardNames).to.be.an('array').that.is.not.empty;\r",
							"    console.log(cardNames.join(\", \"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/cards",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"cards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Response Contains Non-empty Cards Array",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains non-empty cards array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/cards",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"cards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cards has dates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Each card has a due date\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    jsonData.forEach(function(card) {\r",
							"        pm.expect(card).to.have.property('due').and.not.eql(null);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/cards?fields=name,due",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"cards"
					],
					"query": [
						{
							"key": "fields",
							"value": "name,due"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List cards-failed-400- Bad Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of card names\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var cardNames = jsonData.map(function(card) {\r",
							"        return card.name;\r",
							"    });\r",
							"    pm.expect(cardNames).to.be.an('array').that.is.not.empty;\r",
							"    console.log(cardNames.join(\", \"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/cards",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"cards"
					]
				}
			},
			"response": []
		},
		{
			"name": "List cards-404-Not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of card names\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var cardNames = jsonData.map(function(card) {\r",
							"        return card.name;\r",
							"    });\r",
							"    pm.expect(cardNames).to.be.an('array').that.is.not.empty;\r",
							"    console.log(cardNames.join(\" , \"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"disableCookies": false,
				"tlsPreferServerCiphers": false,
				"maxRedirects": 10,
				"followRedirects": true,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/lrZjfOPp/card",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"lrZjfOPp",
						"card"
					]
				}
			},
			"response": []
		}
	]
}